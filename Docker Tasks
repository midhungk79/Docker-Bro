Task 1)====>  Run a apache container with the name 'webserver' and publish the port 80 to the outside

[ec2-user@ip-172-31-27-59 ~]$ docker run -itd --name webserver -p 80:80 httpd
78cbba660bd0db0ddd7e8271323b30c33786e76a073caa35f97903ce7c1d3bcd
[ec2-user@ip-172-31-27-59 ~]$ docker ps
CONTAINER ID   IMAGE     COMMAND              CREATED         STATUS         PORTS                               NAMES
78cbba660bd0   httpd     "httpd-foreground"   6 seconds ago   Up 5 seconds   0.0.0.0:80->80/tcp, :::80->80/tcp   webserver



https://prnt.sc/B9s9QosAYjYj



Task 2) ====> Run an Ubuntu container with the name 'myctr' and publish the port 8080 to the container's 80 port. Inside the container, install nginx
and make sure that your ubuntu container works with the default nginx page on port 8080


[ec2-user@ip-172-31-27-59 ~]$ docker pull ubuntu
[ec2-user@ip-172-31-27-59 ~]$ docker run --name myctr -p 8080:80 -it ubuntu /bin/bash
root@15c62f308d9e:/# apt-get update
root@15c62f308d9e:/# apt-get install nginx
root@15c62f308d9e:/# service nginx start
 * Starting nginx nginx 
root@15c62f308d9e:/# service nginx status
 * nginx is running
root@15c62f308d9e:/# 

https://prnt.sc/gG37LgxFrRNC
https://prnt.sc/oest6Y1PoBrN


Task 3)===>  Run an apache container with 'apache' as default name of the container and publish the port 90 to that container.
 Put a sample website template inside the root directory of the container(Using bind mount). 
 Make sure that the website template loads fine on port 90
 
 
 [ec2-user@ip-172-31-27-59 ~]$ docker pull httpd
[ec2-user@ip-172-31-27-59 ~]$ mkdir site
[ec2-user@ip-172-31-27-59 ~]$ cd site
[ec2-user@ip-172-31-27-59 site]$ wget https://www.free-css.com/assets/files/free-css-templates/download/page288/medic-care.zip
[ec2-user@ip-172-31-27-59 ~]$ docker run --name apache -p 90:80 -v $PWD/site:/usr/local/apache2/htdocs/ -d httpd
https://prnt.sc/hyVnDPkoktUD

https://prnt.sc/57-IK4I1KW-R



Task 4)===>. Copy the default nginx conf from a nginx container to localsystem.
Change the port of the nginx conf in your local system to 8080.  
Run an nginx conatainer with 'mynginx' as the container name with the following spec:

1) a sample website template on the container (using bind mount)
2) attach the new nginx conf to the container and publish the port 70 to the outside world

Make sure your website loads on 70 port with a sample website template.









docker pull nginx
docker run --name temp_nginx -d nginx
docker cp temp_nginx:/etc/nginx/nginx.conf
docker cp temp_nginx:/etc/nginx/conf.d/default.conf
[ec2-user@ip-172-31-27-59 ~]$ vi default.conf 
server {
    listen      8080;
    listen  [::]:80;
    server_name  localhost;

[ec2-user@ip-172-31-27-59 ~]$ docker run --name mynginx -p 70:80 -v $PWD/site:/usr/share/nginx/html -v $PWD/nginx.conf:/etc/nginx/nginx.conf:ro -d nginx

https://prnt.sc/LuN7M7rTCFiZ
https://prnt.sc/o59_uLpFqR5n
